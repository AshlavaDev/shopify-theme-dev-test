<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<style>
  .swiper-button-prev, .swiper-button-next {
    color: #000;
    top: auto !important;
    height: 20px;
  }

  .swiper-button-prev::after, .swiper-button-next::after {
    font-size: 20px;
  }

  .swiper-pagination {
    color: #000;
    bottom: 0 !important;
  }

  .swiper-pagination-bullet {
    background: #000 !important;
  }
</style>

<div class="max-w-6xl mx-auto my-8">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
    <div class="product--media">
      <div class="hidden md:block">
        {% for media in product.media %}
          <div class="h-100 overflow-hidden p-2">
            {% render 'product-media' | media: media %}
          </div>
        {% endfor %}
      </div>
      <div class="md:hidden">
        <div class="swiper h-94">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="h-80 overflow-hidden p-2">
                  {% render 'product-media' | media: media %}
                </div>
              </div>
            {% endfor %}
          </div>
          <div class="swiper-pagination"></div>
          <div class="swiper-button-prev"></div>
          <div class="swiper-button-next"></div>
        </div>
      </div>
    </div>
    <div class="product--info sticky top-5 p-2 h-fit">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        <input type="hidden" name="id" value="{{ selected_variant.id }}">
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'vendor' %}
              <div class="my-3">
                <span class="text-sm md:text-base text-gray-500">{{ product.vendor }}</span>
              </div>
            {% when 'title' %}
              <div class="my-3">
                <h1 class="text-2xl md:text-3xl font-bold">{{ product.title }}</h1>
              </div>
            {% when 'price' %}
              <div class="my-3" id="price-{{ section.id }}">
                <span class="text-lg">{{ selected_variant.price | money }}</span>
                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="text-gray-600 line-through">{{ selected_variant.compare_at_price | money }}</span>
                  <span class="px-5 py-1 text-sm font-bold bg-red-500 text-gray-200 rounded-full">Sale</span>
                {% endif %}
              </div>
            {% when 'variants' %}
              <div class="my-3">
                {% unless product.has_only_default_variant %}
                  <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
      
                      <div class="my-2">
                        <select 
                          name="options[{{ option.name | escape }}]" 
                          id="Option-{{ section.id }}-{{ forloop.index0 }}" 
                          class="w-full border border-gray-800 p-1 rounded"
                        >
                          {% for value in option.values %}
                            <option value="{{ value | escape }}"{% if option.selected_value == value %} selected{% endif %}>{{ value }}</option>
                          {% endfor %}
                        </select>
                      </div>

                      <script type="application/json">{{ product.variants | json }}</script>

                    {% endfor %}
                  </variant-selector>
                {% endunless %}
              </div>
            {% when 'quantity' %}
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input 
                    type="number" 
                    name="quantity" 
                    id="Quantity-{{ section.id }}" 
                    value="1" 
                    min="1" 
                    class="w-full border border-gray-800 p-1 rounded"
                  >
              </div>
            {% when 'description' %}
              <div class="my-3">
                {{ product.description }}
              </div>
            {% when 'checkout-buttons' %}
              <div class="my-3">
                {% if selected_variant.available %}
                  <button type="submit" class="btn-main w-full">Add to Cart</button>
                {% else %}
                  <button type="submit" class="btn-main w-full" disabled>Sold Out</button>
                {% endif %}
              </div>
          {% endcase %}
        {% endfor %}      
      {% endform %}
    </div>
  </div>
</div>

<script>
  // Variant Code
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();

      if(this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
      }
    }

    getSelectedOptions() {
      this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find(
          (variant) => {
            const findings = !variant.options.map(
              (option, index) => {
                return this.options[index] === option;
              } 
            ).includes(false);

            if(findings) return variant;
          }
      );
    }

    updateURL() {
      if(!this.currentVariant) return;
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }

    updateFormID() {
      const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const id = `price-${this.dataset.section}`;
          const html = new DOMParser().parseFromString(responseText, 'text/html');

          const oldPrice = document.getElementById(id);
          const newPrice = html.getElementById(id);

          if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
        });
    }
  }

  customElements.define("variant-selector", VariantSelector);
</script>

<script>
  // Swiper Code
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',
    slidesPerView: 1,
    pagination: {
      el: '.swiper-pagination'
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev'
    }
  })
</script>

{% schema %}
{
  "name": "Template Product",
  "blocks" : [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variants",
      "name": "Variants",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout-buttons",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}